---
layout: post
title: LeetCode 102. 二叉树的层序遍历
tags: [LeetCode]
---

简单思路：层序遍历

[102. 二叉树的层序遍历](https://leetcode-cn.com/problems/binary-tree-level-order-traversal/)

DFS 解法

```js
/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var levelOrder = function (root) {
  if (!root) return [];
  let result = [];
  dfs(root, 0, result);
  return result;
};

function dfs(root, level, result) {
  if (root) {
    if (!result[level]) result[level] = [];
    result[level].push(root.val);
    dfs(root.left, level + 1, result);
    dfs(root.right, level + 1, result);
  }
}
```

BFS 算法 （队列）

```js
/**
 * Definition for a binary tree node.
 * function TreeNode(val) {
 *     this.val = val;
 *     this.left = this.right = null;
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var levelOrder = function (root) {
  if (!root) return [];
  let queue = [root];
  let result = [];

  while (queue.length > 0) {
    const res = [];
    let len = queue.length;

    while (len) {
      const node = queue.shift();
      res.push(node.val);
      if (node.left) queue.push(node.left);
      if (node.right) queue.push(node.right);
      len--;
    }

    result.push(res);
  }

  return result;
};
```
